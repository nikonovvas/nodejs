const express = require('express');
const bodyParser = require('body-parser');
const mqtt = require('mqtt');
const app = express();
const port = 3000;
const TelegramBot = require('node-telegram-bot-api');
const bot = new TelegramBot('6197362821:AAFdHHF-SuDYPKa9cGtk4NwfINZZVB8d9kw', { polling: true });
const mysql = require('mysql');
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: 'root',
  port: '3306',
  database: 'metio'
});
connection.connect();


app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static('public'));
// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
const server = app.listen(port, () => {
  console.log(`http://localhost:3000/`);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ GET –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/index.html');
});
app.get('/subscribe', (req, res) => {
  res.sendFile(__dirname + '/subscribe.html');

});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ POST –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ñ–æ—Ä–º—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç–æ–ø–∏–∫
app.post('/subscribe', (req, res) => {
  let chat_id=req.body.chat_id
  
  
  let mqttBroker = `mqtt://${req.body.server}:${req.body.port}`
  let client = mqtt.connect(mqttBroker);
  console.log('–ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ ' + mqttBroker)
  let clients = {};
  // –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç–æ–ø–∏–∫
  function subscribe(client, topic) {
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ —ç—Ç–æ—Ç —Ç–æ–ø–∏–∫
    if (!clients[topic]) {
      clients[topic] = [];
    }
    clients[topic].push(topic);
    client.subscribe(topic);
    console.log(`–ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ç–æ–ø–∏–∫ ${topic}`);
  }
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Socket.io –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω–æ–π
  let io = require('socket.io')(server);
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
  io.on('connection', (socket) => {
    console.log('Client connected ' + mqttBroker);
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç–æ–ø–∏–∫
    socket.on('subscribe', (topic, key) => {
      console.log("–ü–æ–¥–ø–∏—à–µ–º—Å—è –Ω–∞ " + topic)
      console.log(key)
      // sql_top={topic_name:`${topic}`}
      connection.query('SELECT * FROM topic_info WHERE topic_name = ?', topic, (error, results, fields) => {
        if (error) throw error;
        if (results.length === 0) {
          // –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –µ—â–µ –Ω–µ—Ç, –≤—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
          connection.query('INSERT INTO topic_info SET ?', { topic_name: `${topic}`, top: `${key.top}`, down: `${key.down}`, send_status: '0' ,chat_id: `${chat_id}`}, (error, results, fields) => {
            if (error) throw error;
          });
        } else {
          console.log('–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
          connection.query('UPDATE topic_info SET `top` = ?, `down` = ?, `send_status` = ? WHERE topic_name = ?', [key.top, key.down,0, topic], function (error, results, fields) {
            if (error) throw error;
            
          });
        }
      });

      subscribe(client, topic);
      // messageAll(client, topic);
    });
    socket.on('unsubscribe', topic => {
      client.unsubscribe(topic)
      client.end();
    });

  });


  client.on('message', (topic, message) => {
    console.log(`–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–µ–º ${topic}`);
    console.log(`${topic}: ${message.toString()}`);
    connection.query('SELECT `send_status`, `top`, `down` FROM `topic_info` WHERE `topic_name` = ?', topic, (error, results, fields) => {
      if (error) throw error;
      if (results[0].send_status==false) {
        if (results[0].top<=Number(message)){
          bot.sendMessage(chat_id, `‚úâÔ∏èINFO‚úâÔ∏è\nüìà–ó–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç—á–∏–∫–∞ ${topic} –ø—Ä–µ–≤—ã—Å–∏–ª–æ –∑–∞–¥–∞–Ω–Ω—É—é –æ—Ç–º–µ—Ç–∫—É ${results[0].top} \nüì¢–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç: ` + message +`\nüïë–í—Ä–µ–º—è: ${new Date()}\n üîï–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –¥–∞—Ç—á–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ. –ß—Ç–æ–±—ã –≤–Ω–æ–≤—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ  /restart_send `);
          connection.query('UPDATE topic_info SET `send_status` = ? WHERE topic_name = ?', [1, topic], function (error, results, fields) {
            if (error) throw error;
          });
        }
        if (results[0].down>=Number(message)){
          bot.sendMessage(chat_id, `‚úâÔ∏èINFO‚úâÔ∏è\nüìâ–ó–Ω–∞—á–µ–Ω–∏–µ –¥–∞—Ç—á–∏–∫–∞ ${topic} –Ω–∏–∂–µ –∑–∞–¥–∞–Ω–Ω–æ–π –æ—Ç–º–µ—Ç–∫–∏ ${results[0].down} \nüì¢–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç: ` + message +`\nüïë–í—Ä–µ–º—è: ${new Date()}\n üîï–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –¥–∞—Ç—á–∏–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ. –ß—Ç–æ–±—ã –≤–Ω–æ–≤—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ  /restart_send `);
          connection.query('UPDATE topic_info SET `send_status` = ? WHERE topic_name = ?', [1, topic], function (error, results, fields) {
            if (error) throw error;
          });
        }
        
      }
    });
    console.log(message.toString())
    io.emit('message', topic, message.toString());
  });

  res.redirect('/subscribe')

})

bot.on('message', (msg) => {

  // –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞ –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  const chatId = msg.chat.id;
  const text = msg.text;
  if (text === '/start') {
    bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç!üëãüèª\n –≠—Ç–æ  –±–æ—Ç –¥–ª—è –º–µ—Ç–µ–æ—Å—Ç–∞–Ω—Ü–∏—è. \n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ID —á–∞—Ç–∞ –Ω–∞–∂–º–∏ /chat_id');
  }
  else if (text === '/chat_id') {
    bot.sendMessage(chatId, '‚úÖ–ù–æ–º–µ—Ä —á–∞—Ç–∞ (—Å–∫–æ–ø–∏—Ä—É–π –µ–≥–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã ):');
    bot.sendMessage(chatId,`${chatId}`)
  }
  else if (text === '/info') {
    bot.sendMessage(chatId, '‚ÑπÔ∏è–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä —á–∞—Ç–∞ - /chat_id\n‚ÑπÔ∏è–í–∫–ª—é—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è  - /restart_send\n‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ  - /info\n');
  }
  else if (text === '/restart_send') {
    bot.sendMessage(chatId, 'üîî–í—Å–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!');
    connection.query("UPDATE `topic_info` SET `send_status`='0' WHERE `chat_id`=?",chatId, (error, results, fields) => {
      if (error) throw error;
    });
    

  }
  else{
    bot.sendMessage(chatId, '–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞, –Ω–∞–ø–∏—à–∏ /info –¥–ª—è –ø–ª—É—á–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞');
  }
});